<UserControl x:Class="Charm.Objects.ListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:objects="clr-namespace:Charm.Objects"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="720"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             Background="{DynamicResource MaterialDesignPaper}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             FontFamily="{materialDesign:MaterialDesignFont}"
             >
    <UserControl.DataContext>
        <objects:BaseListViewModel/>
    </UserControl.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50*" />
            <ColumnDefinition Width="50*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="5*" />
            <RowDefinition Height="95*" />
        </Grid.RowDefinitions>

        <TextBox Grid.Row="0" Grid.Column="0" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"
                 TextWrapping="Wrap" VerticalAlignment="Center" FontSize="24" BorderBrush="{StaticResource ForegroundColour80}" BorderThickness="1"
                 FontFamily="{DynamicResource ResourceKey=Neue Haas Grotesk Text Pro 65 Medium}" FontWeight="36"
                 Background="{StaticResource BackgroundColour50}"
                 materialDesign:HintAssist.Hint="Search"/>

        <materialDesign:PopupBox StaysOpen="True" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0" HorizontalAlignment="Left" Background="Transparent" BorderBrush="{StaticResource ForegroundColour70}">
            <StackPanel Orientation="Vertical">
                <CheckBox Content=""/>
            </StackPanel>
        </materialDesign:PopupBox>

        <!-- <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,0,0,0"> -->
        <!--     <CheckBox Checked="TrimCheckbox_OnChecked" Unchecked="TrimCheckbox_OnUnchecked" x:Name="TrimCheckbox" -->
        <!--               IsChecked="True" VerticalAlignment="Center" VerticalContentAlignment="Center" -->
        <!--               HorizontalAlignment="Left" Content="Trim names" /> -->
        <!--     <CheckBox Checked="ShowNamedCheckbox_OnChecked" Unchecked="ShowNamedCheckbox_OnUnchecked" x:Name="ShowNamedCheckbox" -->
        <!--               IsChecked="False" VerticalAlignment="Center" VerticalContentAlignment="Center" -->
        <!--               HorizontalAlignment="Left" Content="Filter named" Margin="20, 0, 0, 0"/> -->
        <!-- </StackPanel> -->


            <ListBox ItemTemplate="{Binding ItemTemplate}" ItemsSource="{Binding Items}" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" SelectionMode="Single" SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}" x:Name="ItemsList">
                <!-- <ListBox.ItemTemplate> -->
            <!--     <DataTemplate DataType="{x:Type objects:ListItemModel}> -->
            <!-- -->
            <!--     </DataTemplate> -->
            <!-- </ListBox.ItemTemplate> -->
            <!-- <ListBoxItem/> -->
        </ListBox>
    </Grid>
</UserControl>

